// <auto-generated />
using System;
using LeagueMaster.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeagueMaster.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230715184114_Usuarios")]
    partial class Usuarios
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CalendarioEquipos", b =>
                {
                    b.Property<int>("EquiposId")
                        .HasColumnType("int");

                    b.Property<int>("calendarioId")
                        .HasColumnType("int");

                    b.HasKey("EquiposId", "calendarioId");

                    b.HasIndex("calendarioId");

                    b.ToTable("CalendarioEquipos");
                });

            modelBuilder.Entity("CalendarioPartidos", b =>
                {
                    b.Property<int>("CalendariosId")
                        .HasColumnType("int");

                    b.Property<int>("PartidosId")
                        .HasColumnType("int");

                    b.HasKey("CalendariosId", "PartidosId");

                    b.HasIndex("PartidosId");

                    b.ToTable("CalendarioPartidos");
                });

            modelBuilder.Entity("EquiposPartidos", b =>
                {
                    b.Property<int>("EquiposId")
                        .HasColumnType("int");

                    b.Property<int>("PartidosId")
                        .HasColumnType("int");

                    b.HasKey("EquiposId", "PartidosId");

                    b.HasIndex("PartidosId");

                    b.ToTable("EquiposPartidos");
                });

            modelBuilder.Entity("Estadisticas_PartidosPartidos", b =>
                {
                    b.Property<int>("Estadisticas_PartidoId")
                        .HasColumnType("int");

                    b.Property<int>("PartidosId")
                        .HasColumnType("int");

                    b.HasKey("Estadisticas_PartidoId", "PartidosId");

                    b.HasIndex("PartidosId");

                    b.ToTable("Estadisticas_PartidosPartidos");
                });

            modelBuilder.Entity("LeagueMaster.Models.Calendario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Arbitro_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arbitro_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Competicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipo_Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipo_Visitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Estadisticas_PartidosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Jornada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesa_principal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas_Adicionales")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Estadisticas_PartidosId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("LeagueMaster.Models.Equipos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entrenador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Estadisticas_JugadoresId")
                        .HasColumnType("int");

                    b.Property<int?>("Estadisticas_PartidosId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Estadisticas_JugadoresId");

                    b.HasIndex("Estadisticas_PartidosId");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("LeagueMaster.Models.Estadisticas_Jugadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Asistencias")
                        .HasColumnType("int");

                    b.Property<int>("Bloqueos")
                        .HasColumnType("int");

                    b.Property<int>("Id_Jugador")
                        .HasColumnType("int");

                    b.Property<int>("Minutos_Jugados")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Jugador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perdidas")
                        .HasColumnType("int");

                    b.Property<decimal>("Porcentaje_Tiros_2P")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje_Tiros_3P")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje_Tiros_Campo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Porcentaje_Tiros_Libres")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rebotes_Densivos")
                        .HasColumnType("int");

                    b.Property<int>("Rebotes_Ofensivos")
                        .HasColumnType("int");

                    b.Property<int>("Robos")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_2P_Exitosos")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_2P_Intentados")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_3P_Exitosos")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_3P_Intentados")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_Campo_Exitosos")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_Campo_Intentados")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_Libres_Exitosos")
                        .HasColumnType("int");

                    b.Property<int>("Tiros_Libres_Intentados")
                        .HasColumnType("int");

                    b.Property<int>("Total_Rebotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estadisticas_Jugadores");
                });

            modelBuilder.Entity("LeagueMaster.Models.Estadisticas_Partidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Arbitro_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arbitro_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Canastas_1")
                        .HasColumnType("int");

                    b.Property<int>("Canastas_2")
                        .HasColumnType("int");

                    b.Property<int>("Canastas_3")
                        .HasColumnType("int");

                    b.Property<string>("Competicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipo_Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipo_Visitante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Jornada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesa_principal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notas_Adicionales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Puntos_Local")
                        .HasColumnType("int");

                    b.Property<int>("Puntos_Visitantes")
                        .HasColumnType("int");

                    b.Property<int>("Total_Faltas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Estadisticas_Partidos");
                });

            modelBuilder.Entity("LeagueMaster.Models.Jugadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Altura")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Equipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquiposId")
                        .HasColumnType("int");

                    b.Property<int?>("Estadisticas_JugadoresId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquiposId");

                    b.HasIndex("Estadisticas_JugadoresId");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("LeagueMaster.Models.Partidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estadio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("LeagueMaster.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquiposId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NivelAcceso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquiposId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("LeagueMaster.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("RolUsuarios", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("RolesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RolUsuarios");
                });

            modelBuilder.Entity("CalendarioEquipos", b =>
                {
                    b.HasOne("LeagueMaster.Models.Equipos", null)
                        .WithMany()
                        .HasForeignKey("EquiposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueMaster.Models.Calendario", null)
                        .WithMany()
                        .HasForeignKey("calendarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CalendarioPartidos", b =>
                {
                    b.HasOne("LeagueMaster.Models.Calendario", null)
                        .WithMany()
                        .HasForeignKey("CalendariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueMaster.Models.Partidos", null)
                        .WithMany()
                        .HasForeignKey("PartidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EquiposPartidos", b =>
                {
                    b.HasOne("LeagueMaster.Models.Equipos", null)
                        .WithMany()
                        .HasForeignKey("EquiposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueMaster.Models.Partidos", null)
                        .WithMany()
                        .HasForeignKey("PartidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Estadisticas_PartidosPartidos", b =>
                {
                    b.HasOne("LeagueMaster.Models.Estadisticas_Partidos", null)
                        .WithMany()
                        .HasForeignKey("Estadisticas_PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueMaster.Models.Partidos", null)
                        .WithMany()
                        .HasForeignKey("PartidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueMaster.Models.Calendario", b =>
                {
                    b.HasOne("LeagueMaster.Models.Estadisticas_Partidos", null)
                        .WithMany("Calendario")
                        .HasForeignKey("Estadisticas_PartidosId");
                });

            modelBuilder.Entity("LeagueMaster.Models.Equipos", b =>
                {
                    b.HasOne("LeagueMaster.Models.Estadisticas_Jugadores", null)
                        .WithMany("Equipos")
                        .HasForeignKey("Estadisticas_JugadoresId");

                    b.HasOne("LeagueMaster.Models.Estadisticas_Partidos", null)
                        .WithMany("Equipos")
                        .HasForeignKey("Estadisticas_PartidosId");
                });

            modelBuilder.Entity("LeagueMaster.Models.Jugadores", b =>
                {
                    b.HasOne("LeagueMaster.Models.Equipos", null)
                        .WithMany("Jugadores")
                        .HasForeignKey("EquiposId");

                    b.HasOne("LeagueMaster.Models.Estadisticas_Jugadores", null)
                        .WithMany("Jugadores")
                        .HasForeignKey("Estadisticas_JugadoresId");
                });

            modelBuilder.Entity("LeagueMaster.Models.Rol", b =>
                {
                    b.HasOne("LeagueMaster.Models.Equipos", null)
                        .WithMany("roles")
                        .HasForeignKey("EquiposId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolUsuarios", b =>
                {
                    b.HasOne("LeagueMaster.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeagueMaster.Models.Usuarios", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LeagueMaster.Models.Equipos", b =>
                {
                    b.Navigation("Jugadores");

                    b.Navigation("roles");
                });

            modelBuilder.Entity("LeagueMaster.Models.Estadisticas_Jugadores", b =>
                {
                    b.Navigation("Equipos");

                    b.Navigation("Jugadores");
                });

            modelBuilder.Entity("LeagueMaster.Models.Estadisticas_Partidos", b =>
                {
                    b.Navigation("Calendario");

                    b.Navigation("Equipos");
                });
#pragma warning restore 612, 618
        }
    }
}
